/*%FSM<COMPILE "C:\Program Files (x86)\Bohemia Interactive\Tools\FSM Editor Personal Edition\scriptedFSM.cfg, Contours Mission Flow">*/
/*%FSM<HEAD>*/
/*
item0[] = {"init",0,250,-30.000000,-510.000000,60.000000,-460.000000,0.000000,"init"};
item1[] = {"not_server",4,218,-30.000000,-580.000000,60.000000,-530.000000,1.000000,"not server"};
item2[] = {"exit",1,250,-30.000000,-650.000000,60.000000,-600.000000,0.000000,"exit"};
item3[] = {"server",4,218,-30.000000,-440.000000,60.000000,-390.000000,0.000000,"server"};
item4[] = {"insertion",2,250,-30.000000,-370.000000,60.000000,-320.000000,0.000000,"insertion"};
item5[] = {"insertion_finish",4,218,-30.000000,-300.000000,60.000000,-250.000000,1.000000,"insertion" \n "finished"};
item6[] = {"start_assault",2,250,-30.000000,-230.000000,60.000000,-180.000000,0.000000,"start assault"};
item7[] = {"maxwell_seized",4,218,-30.000000,-160.000000,60.000000,-110.000000,0.000000,"maxwell" \n "seized"};
item8[] = {"defend",2,4346,-30.000000,-90.000000,60.000000,-40.000000,0.000000,"defend"};
link0[] = {0,1};
link1[] = {0,3};
link2[] = {1,2};
link3[] = {3,4};
link4[] = {4,5};
link5[] = {5,6};
link6[] = {6,7};
link7[] = {7,8};
globals[] = {10.000000,1,0,0,0,640,480,4,11,6316128,1,-137.755203,187.408127,-9.681641,-269.077026,1592,1270,1};
window[] = {2,-1,-1,-1,-1,954,296,1736,104,3,1610};
*//*%FSM</HEAD>*/
class FSM
{
  fsmName = "Contours Mission Flow";
  class States
  {
    /*%FSM<STATE "init">*/
    class init
    {
      name = "init";
      init = /*%FSM<STATEINIT""">*/""/*%FSM</STATEINIT""">*/;
      precondition = /*%FSM<STATEPRECONDITION""">*/""/*%FSM</STATEPRECONDITION""">*/;
      class Links
      {
        /*%FSM<LINK "not_server">*/
        class not_server
        {
          priority = 1.000000;
          to="exit";
          precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
          condition=/*%FSM<CONDITION""">*/"!isServer"/*%FSM</CONDITION""">*/;
          action=/*%FSM<ACTION""">*/""/*%FSM</ACTION""">*/;
        };
        /*%FSM</LINK>*/
        /*%FSM<LINK "server">*/
        class server
        {
          priority = 0.000000;
          to="insertion";
          precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
          condition=/*%FSM<CONDITION""">*/"isServer"/*%FSM</CONDITION""">*/;
          action=/*%FSM<ACTION""">*/""/*%FSM</ACTION""">*/;
        };
        /*%FSM</LINK>*/
      };
    };
    /*%FSM</STATE>*/
    /*%FSM<STATE "exit">*/
    class exit
    {
      name = "exit";
      init = /*%FSM<STATEINIT""">*/""/*%FSM</STATEINIT""">*/;
      precondition = /*%FSM<STATEPRECONDITION""">*/""/*%FSM</STATEPRECONDITION""">*/;
      class Links
      {
      };
    };
    /*%FSM</STATE>*/
    /*%FSM<STATE "insertion">*/
    class insertion
    {
      name = "insertion";
      init = /*%FSM<STATEINIT""">*/"/* =Insertion Task" \n
       "----------------------------------------------- */" \n
       """NMD_seize"" call BIS_fnc_missionTasks;" \n
       "" \n
       "" \n
       "/* =Insertion Choppers" \n
       "----------------------------------------------- */" \n
       "{" \n
       "	private [""_chopper"", ""_lz"", ""_end""];" \n
       "	_chopper 	= _x select 0;" \n
       "	_lz			= _x select 1;" \n
       "	_end		= _x select 2;" \n
       "	" \n
       "	//Chopper AI stuff" \n
       "	_chopper disableAi ""TARGET"";" \n
       "	_chopper disableAi ""AUTOTARGET"";" \n
       "	_chopper setCaptive true;" \n
       "	_chopper allowFleeing 0;" \n
       "	_chopper lock true;" \n
       "	" \n
       "	//Height of flight" \n
       "	_chopper flyInHeight 20;" \n
       "	" \n
       "	//Remove stuff from chopper cargo" \n
       "	clearItemCargo _chopper;" \n
       "	clearMagazineCargo _chopper;" \n
       "	clearWeaponCargo _chopper;" \n
       "	" \n
       "	//Move to LZ and land waypoint" \n
       "	private ""_wp1"";" \n
       "	_wp1 = group _chopper addWaypoint [ _lz, 0 ];" \n
       "	_wp1 setWaypointType ""MOVE"";" \n
       "	_wp1 setWaypointStatements [ ""true"", ""vehicle this land 'GET OUT'; vehicle this lock false;"" ];" \n
       "	_wp1 showWaypoint ""NEVER"";" \n
       "	" \n
       "	//Unload troops waypoint" \n
       "	private ""_wp2"";" \n
       "	_wp2 = group _chopper addWaypoint [ _lz, 0 ];" \n
       "	_wp2 setWaypointType ""TR UNLOAD"";" \n
       "	_wp2 setWaypointStatements [ ""true"", ""if ( alive NMD_lzInsertion_1 ) then { NMD_lzInsertion_1 setDamage 1; }; vehicle this lock true;"" ];" \n
       "	_wp2 showWaypoint ""NEVER"";" \n
       "	" \n
       "	//Move away and delete waypoint" \n
       "	private ""_wp3"";" \n
       "	_wp3 = group _chopper addWaypoint [ _end, 0 ];" \n
       "	_wp3 setWaypointType ""MOVE"";" \n
       "	_wp3 setWaypointStatements [ ""true"", ""_chopper = vehicle this; _group = group this; { deleteVehicle _x; } forEach units _group; deleteVehicle _chopper; deleteGroup _group;"" ];" \n
       "	_wp3 showWaypoint ""NEVER"";" \n
       "" \n
       "} forEach [" \n
       "	[ NMD_insertionChopper_1, position NMD_lzInsertion_1, getMarkerPos ""NMD_insertionChopperExit_1"" ]," \n
       "	[ NMD_insertionChopper_2, position NMD_lzInsertion_2, getMarkerPos ""NMD_insertionChopperExit_2"" ]" \n
       "];" \n
       "" \n
       "" \n
       "[] spawn {" \n
       "	sleep 20;" \n
       "	NMD_insertionChopper_1 animateDoor [ ""Door_L"", 1 ];" \n
       "	sleep 2.5;" \n
       "	NMD_insertionChopper_1 animateDoor [""Door_R"", 1];" \n
       "	sleep 5;" \n
       "	NMD_insertionChopper_2 animateDoor [ ""Door_L"", 1 ];" \n
       "	NMD_insertionChopper_2 animateDoor [ ""Door_R"", 1 ];" \n
       "};"/*%FSM</STATEINIT""">*/;
      precondition = /*%FSM<STATEPRECONDITION""">*/""/*%FSM</STATEPRECONDITION""">*/;
      class Links
      {
        /*%FSM<LINK "insertion_finish">*/
        class insertion_finish
        {
          priority = 1.000000;
          to="start_assault";
          precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
          condition=/*%FSM<CONDITION""">*/"!alive NMD_lzInsertion_1"/*%FSM</CONDITION""">*/;
          action=/*%FSM<ACTION""">*/""/*%FSM</ACTION""">*/;
        };
        /*%FSM</LINK>*/
      };
    };
    /*%FSM</STATE>*/
    /*%FSM<STATE "start_assault">*/
    class start_assault
    {
      name = "start_assault";
      init = /*%FSM<STATEINIT""">*/"/* =Seize Task" \n
       "----------------------------------------------- */" \n
       "[ ""NMD_seize"", ""ASSIGNED"" ] call BIS_fnc_missionTasks;" \n
       "" \n
       "" \n
       "/* =Triggers" \n
       "----------------------------------------------- */" \n
       "// Trigger to check opfor have been eliminated from Camp Maxwell" \n
       "private ""_trigger1"";" \n
       "_trigger1 = createTrigger [ ""EmptyDetector"", getMarkerPos ""NMD_maxwell"" ];" \n
       "_trigger1 setTriggerArea [ 300, 300, 0, false ];" \n
       "_trigger1 setTriggerTimeout [ 10, 15, 20, false  ];" \n
       "_trigger1 setTriggerActivation [ ""EAST"", ""NOT PRESENT"", false ];" \n
       "_trigger1 setTriggerStatements [ ""this"", ""BIS_maxwellSeized = true;"", """" ];" \n
       "" \n
       "// Trigger to check bluefor are inside Camp Maxwell" \n
       "private ""_trigger2"";" \n
       "_trigger2 = createTrigger [ ""EmptyDetector"", getMarkerPos ""NMD_maxwell"" ];" \n
       "_trigger2 setTriggerArea [ 50, 50, 0, false ];" \n
       "_trigger2 setTriggerActivation [ ""WEST"", ""PRESENT"", false ];" \n
       "_trigger2 setTriggerStatements [ ""this && { _x in thisList } count ( playableUnits + switchableUnits ) > 0"", ""NMD_maxwellControlled = true;"", """" ];"/*%FSM</STATEINIT""">*/;
      precondition = /*%FSM<STATEPRECONDITION""">*/""/*%FSM</STATEPRECONDITION""">*/;
      class Links
      {
        /*%FSM<LINK "maxwell_seized">*/
        class maxwell_seized
        {
          priority = 0.000000;
          to="defend";
          precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
          condition=/*%FSM<CONDITION""">*/"!isNil { NMD_maxwellSeized }" \n
           "&&" \n
           "!isNil { NMD_maxwellControlled }"/*%FSM</CONDITION""">*/;
          action=/*%FSM<ACTION""">*/""/*%FSM</ACTION""">*/;
        };
        /*%FSM</LINK>*/
      };
    };
    /*%FSM</STATE>*/
    /*%FSM<STATE "defend">*/
    class defend
    {
      name = "defend";
      init = /*%FSM<STATEINIT""">*/"/* =Tasks" \n
       "----------------------------------------------- */" \n
       "// Succeed Seize task" \n
       "[ ""NMD_seize"", ""SUCCEEDED"" ] call BIS_fnc_missionTasks;"/*%FSM</STATEINIT""">*/;
      precondition = /*%FSM<STATEPRECONDITION""">*/""/*%FSM</STATEPRECONDITION""">*/;
      class Links
      {
      };
    };
    /*%FSM</STATE>*/
  };
  initState="init";
  finalStates[] =
  {
    "exit",
  };
};
/*%FSM</COMPILE>*/